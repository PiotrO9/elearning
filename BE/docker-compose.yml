version: '3.8'

services:
 postgres:
  image: postgres:15-alpine
  container_name: elearning_db
  env_file:
   - .env
  environment:
   - POSTGRES_USER=${POSTGRES_USER}
   - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
   - POSTGRES_DB=${POSTGRES_DB}
  ports:
   - '5432:5432'
  volumes:
   - pgdata:/var/lib/postgresql/data
  networks:
   - elearning_network
  healthcheck:
   test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER:-postgres}']
   interval: 10s
   timeout: 5s
   retries: 5

 app:
  build: .
  container_name: elearning_app
  ports:
   - '3000:3000'
  environment:
   NODE_ENV: ${NODE_ENV:-development}
   PORT: ${PORT:-3000}
   DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-flag_feature}?schema=public
   PUBLIC_BASE_URL: ${PUBLIC_BASE_URL:-http://localhost:3000}
  depends_on:
   postgres:
    condition: service_healthy
  networks:
   - elearning_network
  volumes:
   - .:/app
   - /app/node_modules
  command: sh -c "npm install && npx prisma generate && npx prisma migrate deploy && npm run dev"
  healthcheck:
   test: ['CMD', 'wget', '--no-verbose', '--tries=1', '--spider', 'http://localhost:3000/health']
   interval: 30s
   timeout: 10s
   retries: 3
   start_period: 40s

volumes:
 pgdata:

networks:
 elearning_network:
  driver: bridge
