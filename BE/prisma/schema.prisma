generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   String           @id @default(uuid())
  email                String           @unique
  username             String           @unique
  password             String
  createdAt            DateTime         @default(now())
  updatedAt            DateTime         @updatedAt
  deletedAt            DateTime?        // soft delete timestamp
  lastSeen             DateTime?        // last time user was online
  isOnline             Boolean          @default(false)

  refreshTokens        RefreshToken[]
}

model RefreshToken {
  id          String   @id @default(uuid())
  token       String   @unique
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  expiresAt   DateTime
  createdAt   DateTime @default(now())
  deletedAt   DateTime?
}

model Course {
  id                  String   @id @default(cuid())
  title               String
  summary             String
  descriptionMarkdown String
  imagePath           String
  isPublished         Boolean  @default(true)
  videos              Video[]
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

model Video {
  id               String   @id @default(cuid())
  courseId         String?
  course           Course?  @relation(fields: [courseId], references: [id], onDelete: Cascade)
  title            String
  order            Int
  isTrailer        Boolean  @default(false)
  sourceUrl        String
  durationSeconds  Int?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@unique([courseId, order])
}